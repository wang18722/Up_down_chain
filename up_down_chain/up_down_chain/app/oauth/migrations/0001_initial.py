# -*- coding: utf-8 -*-
# Generated by Django 1.11.11 on 2019-06-24 05:29
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomerInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('headimgUrl', models.CharField(max_length=250, null=True, unique=True, verbose_name='微信头像')),
                ('sex', models.CharField(max_length=32, null=True, verbose_name='微信性别')),
                ('province', models.CharField(max_length=100, null=True, verbose_name='微信省份')),
                ('city', models.CharField(max_length=32, null=True, verbose_name='微信城市')),
                ('country', models.CharField(max_length=32, null=True, verbose_name='微信国家')),
                ('CreateTime', models.DateField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户信息表',
                'verbose_name_plural': '用户信息表',
                'db_table': 'tb_Customer_information',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='OAuthWXUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('openid', models.CharField(db_index=True, max_length=64, verbose_name='微信用户编号')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='关联的上下链用户')),
            ],
            options={
                'verbose_name': '微信用户数据',
                'verbose_name_plural': '微信用户数据',
                'db_table': 'tb_oauth_wx',
            },
        ),
        migrations.CreateModel(
            name='Wxorder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.CharField(max_length=256, verbose_name='商品描述')),
                ('out_trade_no', models.CharField(max_length=64, unique=True, verbose_name='订单号')),
                ('transaction_id', models.CharField(default='', max_length=64, verbose_name='微信支付订单号')),
                ('total_fee', models.BigIntegerField(verbose_name='订单的资金总额,单位为分')),
                ('product_id', models.CharField(max_length=16, verbose_name='商品ID')),
                ('notify_url', models.CharField(max_length=500, verbose_name='支付完成通知url')),
                ('pay_time', models.DateTimeField(blank=True, null=True, verbose_name='支付时间')),
            ],
            options={
                'verbose_name': '微信订单',
                'verbose_name_plural': '微信订单',
            },
        ),
        migrations.CreateModel(
            name='Wxpay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('out_trade_no', models.CharField(blank=True, max_length=64, null=True, verbose_name='订单号')),
                ('pay_no', models.CharField(blank=True, max_length=64, null=True, unique=True, verbose_name='支付唯一订单号')),
                ('code_url', models.CharField(blank=True, max_length=100, null=True, verbose_name='二维码地址')),
                ('nonce_str', models.CharField(blank=True, max_length=32, null=True, verbose_name='随机字符串')),
            ],
            options={
                'verbose_name': '微信支付',
                'verbose_name_plural': '微信支付',
            },
        ),
    ]
